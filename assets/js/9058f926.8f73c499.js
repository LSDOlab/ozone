"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[409],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(r),d=n,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||o;return r?a.createElement(h,i(i({ref:t},u),{},{components:r})):a.createElement(h,i({ref:t},u))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},415:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var a=r(7462),n=r(3366),o=(r(7294),r(3905)),i=["components"],l={sidebar_position:7},s="Methods and Approaches",p={unversionedId:"tutorial-basics/methods-and-approaches",id:"tutorial-basics/methods-and-approaches",title:"Methods and Approaches",description:"ozone can solve using a wide array of numerical methods and solution approaches. To specify a numerical method and solution approach use the first two arguments of the ODEProblem class instantiation.",source:"@site/docs/tutorial-basics/methods-and-approaches.mdx",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/methods-and-approaches",permalink:"/ozone/docs/tutorial-basics/methods-and-approaches",editUrl:"https://github.com/lsdolab/ozone/edit/main/website/docs/tutorial-basics/methods-and-approaches.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"ODEProblem Class",permalink:"/ozone/docs/tutorial-basics/ode-problem"},next:{title:"Coupled ODE",permalink:"/ozone/docs/tutorial-extras/coupled-ode"}},u=[{value:"Numerical Methods",id:"numerical-methods",children:[],level:2},{value:"Solution Approaches",id:"solution-approaches",children:[],level:2}],c={toc:u};function m(e){var t=e.components,r=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"methods-and-approaches"},"Methods and Approaches"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"ozone")," can solve using a wide array of numerical methods and solution approaches. To specify a numerical method and solution approach use the first two arguments of the ODEProblem class instantiation."),(0,o.kt)("p",null,"For example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"from ozone.api import ODEProblem\node_problem = ODEProblem(<numerical method string>, <solution approach string>, <number of timesteps>)\n")),(0,o.kt)("h2",{id:"numerical-methods"},"Numerical Methods"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Numerical methods")," are approximations that temporally discretize differential equations to approximate the solution. Both implicit and explicit Runge-Kutta methods are supported and are listed below:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"'ForwardEuler'"),(0,o.kt)("li",{parentName:"ul"},"'BackwardEuler'"),(0,o.kt)("li",{parentName:"ul"},"'ExplicitMidpoint'"),(0,o.kt)("li",{parentName:"ul"},"'ImplicitMidpoint'"),(0,o.kt)("li",{parentName:"ul"},"'KuttaThirdOrder'"),(0,o.kt)("li",{parentName:"ul"},"'RK4'"),(0,o.kt)("li",{parentName:"ul"},"'RK6'"),(0,o.kt)("li",{parentName:"ul"},"'RalstonsMethod'"),(0,o.kt)("li",{parentName:"ul"},"'HeunsMethod'"),(0,o.kt)("li",{parentName:"ul"},"'GaussLegendre2'"),(0,o.kt)("li",{parentName:"ul"},"'GaussLegendre4'"),(0,o.kt)("li",{parentName:"ul"},"'GaussLegendre6'"),(0,o.kt)("li",{parentName:"ul"},"'Lobatto2'"),(0,o.kt)("li",{parentName:"ul"},"'Lobatto4'"),(0,o.kt)("li",{parentName:"ul"},"'RadauI3'"),(0,o.kt)("li",{parentName:"ul"},"'RadauI5'"),(0,o.kt)("li",{parentName:"ul"},"'RadauII3'"),(0,o.kt)("li",{parentName:"ul"},"'RadauII5'"),(0,o.kt)("li",{parentName:"ul"},"'Trapezoidal'"),(0,o.kt)("li",{parentName:"ul"},"'AB1'"),(0,o.kt)("li",{parentName:"ul"},"'AM1'"),(0,o.kt)("li",{parentName:"ul"},"'BDF1'")),(0,o.kt)("h2",{id:"solution-approaches"},"Solution Approaches"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Solution approaches")," define how to solve the numerical methods listed above. There are three supported types:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"'time-marching': Compute the state sequentially through timesteps."),(0,o.kt)("li",{parentName:"ul"},"'solver-based': Compute the state across timesteps in parallel."),(0,o.kt)("li",{parentName:"ul"},"'time-marching checkpointing': time-marching but memory usage is reduced with the added cost of slower computation time.")))}m.isMDXComponent=!0}}]);